// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Statuspage
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Statuspage = Pulumi.Statuspage;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myGroup = new Statuspage.ComponentGroup("myGroup", new()
    ///     {
    ///         Components = new[]
    ///         {
    ///             statuspage_component.My_component.Id,
    ///         },
    ///         Description = "Created by terraform",
    ///         PageId = "pageid",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// `statuspage_component_group` can be imported using the ID of the component group, e.g.
    /// 
    /// ```sh
    /// $ pulumi import statuspage:index/componentGroup:ComponentGroup my_group my-page-id/my-component-group-id
    /// ```
    /// </summary>
    [StatuspageResourceType("statuspage:index/componentGroup:ComponentGroup")]
    public partial class ComponentGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of component IDs
        /// </summary>
        [Output("components")]
        public Output<ImmutableArray<string>> Components { get; private set; } = null!;

        /// <summary>
        /// description of the component group
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// name of the component group
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// the id of the page this component belongs to
        /// </summary>
        [Output("pageId")]
        public Output<string> PageId { get; private set; } = null!;


        /// <summary>
        /// Create a ComponentGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ComponentGroup(string name, ComponentGroupArgs args, CustomResourceOptions? options = null)
            : base("statuspage:index/componentGroup:ComponentGroup", name, args ?? new ComponentGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ComponentGroup(string name, Input<string> id, ComponentGroupState? state = null, CustomResourceOptions? options = null)
            : base("statuspage:index/componentGroup:ComponentGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/mortaelth/pulumi-statuspage-provider",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ComponentGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ComponentGroup Get(string name, Input<string> id, ComponentGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ComponentGroup(name, id, state, options);
        }
    }

    public sealed class ComponentGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("components", required: true)]
        private InputList<string>? _components;

        /// <summary>
        /// List of component IDs
        /// </summary>
        public InputList<string> Components
        {
            get => _components ?? (_components = new InputList<string>());
            set => _components = value;
        }

        /// <summary>
        /// description of the component group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// name of the component group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// the id of the page this component belongs to
        /// </summary>
        [Input("pageId", required: true)]
        public Input<string> PageId { get; set; } = null!;

        public ComponentGroupArgs()
        {
        }
        public static new ComponentGroupArgs Empty => new ComponentGroupArgs();
    }

    public sealed class ComponentGroupState : global::Pulumi.ResourceArgs
    {
        [Input("components")]
        private InputList<string>? _components;

        /// <summary>
        /// List of component IDs
        /// </summary>
        public InputList<string> Components
        {
            get => _components ?? (_components = new InputList<string>());
            set => _components = value;
        }

        /// <summary>
        /// description of the component group
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// name of the component group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// the id of the page this component belongs to
        /// </summary>
        [Input("pageId")]
        public Input<string>? PageId { get; set; }

        public ComponentGroupState()
        {
        }
        public static new ComponentGroupState Empty => new ComponentGroupState();
    }
}
